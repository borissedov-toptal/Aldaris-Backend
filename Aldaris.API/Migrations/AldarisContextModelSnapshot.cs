// <auto-generated />
using System;
using Aldaris.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aldaris.API.Migrations
{
    [DbContext(typeof(AldarisContext))]
    partial class AldarisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aldaris.API.Domain.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Aldaris.API.Domain.GameSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameStage")
                        .HasColumnType("int");

                    b.Property<string>("Solution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("Aldaris.API.Domain.GameSessionAnswer", b =>
                {
                    b.Property<Guid>("GameSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("AnswerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("AnsweredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AskedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("GameSessionId", "QuestionId");

                    b.HasIndex("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("GameSessionAnswer");
                });

            modelBuilder.Entity("Aldaris.API.Domain.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Aldaris.API.Domain.QuestionPossibleAnswer", b =>
                {
                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId", "AnswerId");

                    b.HasIndex("AnswerId");

                    b.ToTable("QuestionPossibleAnswer");
                });

            modelBuilder.Entity("Aldaris.API.Domain.GameSessionAnswer", b =>
                {
                    b.HasOne("Aldaris.API.Domain.Answer", "Answer")
                        .WithMany("GameSessionAnswers")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aldaris.API.Domain.GameSession", "GameSession")
                        .WithMany("GameSessionAnswers")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aldaris.API.Domain.Question", "Question")
                        .WithMany("GameSessionAnswers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("GameSession");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Aldaris.API.Domain.QuestionPossibleAnswer", b =>
                {
                    b.HasOne("Aldaris.API.Domain.Answer", "Answer")
                        .WithMany("QuestionPossibleAnswers")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aldaris.API.Domain.Question", "Question")
                        .WithMany("QuestionPossibleAnswers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Aldaris.API.Domain.Answer", b =>
                {
                    b.Navigation("GameSessionAnswers");

                    b.Navigation("QuestionPossibleAnswers");
                });

            modelBuilder.Entity("Aldaris.API.Domain.GameSession", b =>
                {
                    b.Navigation("GameSessionAnswers");
                });

            modelBuilder.Entity("Aldaris.API.Domain.Question", b =>
                {
                    b.Navigation("GameSessionAnswers");

                    b.Navigation("QuestionPossibleAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
